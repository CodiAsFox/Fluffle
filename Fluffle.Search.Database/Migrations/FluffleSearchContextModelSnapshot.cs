// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Noppes.Fluffle.Search.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Noppes.Fluffle.Search.Database.Migrations
{
    [DbContext(typeof(FluffleSearchContext))]
    partial class FluffleSearchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("en_US.utf8")
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Noppes.Fluffle.Search.Database.Models.CreditableEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlatformId")
                        .HasColumnType("integer");

                    b.Property<int?>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId", "ChangeId");

                    b.ToTable("CreditableEntities", (string)null);
                });

            modelBuilder.Entity("Noppes.Fluffle.Search.Database.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("CompressedImageHashes")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int[]>("Credits")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSfw")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlatformId")
                        .HasColumnType("integer");

                    b.Property<int>("ThumbnailCenterX")
                        .HasColumnType("integer");

                    b.Property<int>("ThumbnailCenterY")
                        .HasColumnType("integer");

                    b.Property<int>("ThumbnailHeight")
                        .HasColumnType("integer");

                    b.Property<string>("ThumbnailLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ThumbnailWidth")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId", "ChangeId")
                        .IsUnique();

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("Noppes.Fluffle.Search.Database.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("NormalizedName")
                        .IsUnique();

                    b.ToTable("Platforms", (string)null);
                });

            modelBuilder.Entity("Noppes.Fluffle.Search.Database.Models.SearchRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int?>("AlternativeCount")
                        .HasColumnType("integer");

                    b.Property<int?>("AppendCreditableEntities")
                        .HasColumnType("integer");

                    b.Property<int?>("AreaCheck")
                        .HasColumnType("integer");

                    b.Property<int?>("CleanViewLocation")
                        .HasColumnType("integer");

                    b.Property<int?>("CompareCoarse")
                        .HasColumnType("integer");

                    b.Property<int?>("CompareGranular")
                        .HasColumnType("integer");

                    b.Property<int?>("Compute1024Average")
                        .HasColumnType("integer");

                    b.Property<int?>("Compute1024Blue")
                        .HasColumnType("integer");

                    b.Property<int?>("Compute1024Green")
                        .HasColumnType("integer");

                    b.Property<int?>("Compute1024Red")
                        .HasColumnType("integer");

                    b.Property<int?>("Compute256Average")
                        .HasColumnType("integer");

                    b.Property<int?>("Compute256Blue")
                        .HasColumnType("integer");

                    b.Property<int?>("Compute256Green")
                        .HasColumnType("integer");

                    b.Property<int?>("Compute256Red")
                        .HasColumnType("integer");

                    b.Property<int?>("Compute64Average")
                        .HasColumnType("integer");

                    b.Property<int?>("Count")
                        .HasColumnType("integer");

                    b.Property<int?>("DetermineFinalOrder")
                        .HasColumnType("integer");

                    b.Property<int?>("EnqueueLinkCreation")
                        .HasColumnType("integer");

                    b.Property<int?>("ExactCount")
                        .HasColumnType("integer");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<int?>("Finish")
                        .HasColumnType("integer");

                    b.Property<int?>("Flush")
                        .HasColumnType("integer");

                    b.Property<int?>("Format")
                        .HasColumnType("integer");

                    b.Property<string>("From")
                        .HasColumnType("text");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<bool?>("LinkCreated")
                        .HasColumnType("boolean");

                    b.Property<int?>("LinkCreationPreparation")
                        .HasColumnType("integer");

                    b.Property<int?>("ReduceCoarseResults")
                        .HasColumnType("integer");

                    b.Property<int?>("ReduceGranularResults")
                        .HasColumnType("integer");

                    b.Property<int?>("RetrieveCreditableEntities")
                        .HasColumnType("integer");

                    b.Property<int?>("RetrieveImageInfo")
                        .HasColumnType("integer");

                    b.Property<int>("Sequence")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TossUpCount")
                        .HasColumnType("integer");

                    b.Property<int?>("UnlikelyCount")
                        .HasColumnType("integer");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LinkCreated");

                    b.ToTable("SearchRequests", (string)null);
                });

            modelBuilder.Entity("Noppes.Fluffle.Search.Database.Models.CreditableEntity", b =>
                {
                    b.HasOne("Noppes.Fluffle.Search.Database.Models.Platform", "Platform")
                        .WithMany("CreditableEntities")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("Noppes.Fluffle.Search.Database.Models.Platform", b =>
                {
                    b.Navigation("CreditableEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
